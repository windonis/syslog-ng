import xml.etree.ElementTree as syslog
import networkx as nx
import matplotlib.pyplot as plt

#xml file that generated by bison
tree = syslog.parse("gsoc.xml")
root = tree.getroot()

class RULE:
    def __init__(self,number,usefulness,lhs):
        self.number = number
        self.usefulness = usefulness
        self.lhs = lhs
#parsing number, usefulness and lhs properties for every rule.
def xmlparser():
    collector = []
    for rule in root.iter('rule'):
        number = rule.get('number')
        usefulness = rule.get('usefulness')
        lhs = rule.find('lhs').text
        g_rule = RULE(int (number),usefulness,lhs)
        collector.append(g_rule)
        del g_rule
    return collector

#if symbol is equal any rule's lhs, we need find it.
def lhsfinder(symbolName):
    lhslist = []
    for rule in root.iter('rule'):
        lhs = rule.find('lhs').text
        lhslist.append(lhs)
        res_list = []
        for i, value in enumerate(lhslist):
            if symbolName == value:
                res_list.append(i)
    return res_list


c_array = xmlparser()
G = nx.Graph()
for i in c_array:
    #create nodes from rule number. 
    G.add_node(i.number, data=i)

#find symbols and look relationship of rules lhs. 
def edgeAdder():
    for rule in root.iter('rule'):
        for rhs in rule.iter('rhs'):
            symbol = rhs.findall('symbol')
            for i in symbol:
                if i is not None:
                    returnvalue = lhsfinder(i.text)
                    if len(returnvalue) != 0:
                        for x in returnvalue:
                            #if match them, create edge this rule number.
                            G.add_edge(x, i.text)
                    else:
                        #or create edge [x] value.
                        G.add_edge("[x]", i.text)

edgeAdder()


print(G.edges(6))
#stdout ---> [(6, 'http_options')]

print (G.edges('http_option'))
#stdout ---> [('http_option', 7), ('http_option', 8), ('http_option', 9), ('http_option', 10), ('http_option', 11), ('http_option', 12), ('http_option', 13), ('http_option', 14), ('http_option', 15), ('http_option', 16), ('http_option', 17), ('http_option', 18), ('http_option', 19), ('http_option', 20), ('http_option', 21), ('http_option', 22), ('http_option', 23), ('http_option', 24), ('http_option', 26)]
